---
title: "PETRUS"
subtitle: "Validation des lecteurs V1.1"
date: today
date-format: "DD MMMM YYYY"
lang: fr
language:
  title-block-author-single: "Auteur"
author:
  - name: "D<sup>r</sup> Philippe MICHEL"
    orcid: "0000-0003-2392-7186"
    email: "philippe.michel@ght-novo.fr"
    role: "Statisticien"
    affiliations:
      name: "USRC - Hôpital NOVO"
      city: Pontoise
      department: "Unité de Soutien à la Recherche Clinique"

title-block-banner: "#26474a"
title-block-banner-color: white
format:
  html:
    appendix-style: default
    embed-resources: true
    theme: flatly
    code-fold: true
    code-line-numbers: true
    html-math-method: katex
    highlight-style: ayu
    page-layout: full
    toc: true
    number-sections: true
    smooth-scroll: true
    citation-hover: true
bibliography: stat.bib
csl: jama.csl
license: "CC BY-SA"
warning: false
message: false
cache: true
website:
  title: "COPSCA"
  sidebar:
   style: "docked"
   search: true
   contents:
     - text: "AA"
     - contents: auto
---

Pour chaque coupe la moyenne des mesures des experts a été calculée. La mesure des lecteurs est refusée si elle a plus de 1 mm d'écart avec la moyenne des mesures des experts. 

Pour chaque candidat on observe une ou deux erreurs. Il reste à fixer un nombre d'erreurs acceptables.

```{r}
#| label: setup

# setup

rm(list = ls())

library("baseph")
library("tidyverse")
library("readODS")
library("janitor")
library("labelled")
library("kableExtra")

classeur <- "validation.ods"
expx <- TRUE
if (expx) {
  file.create(classeur)
  file.remove(classeur)
  write_ods(iris, classeur)
}
```

```{r}
#| label: import

# Importation & mise en forme des données

#tt1 <- read_ods("Validation_lecteurs/validation1.ods", na = c("", " ","NA")) |> 
 tt1 <- read_ods("validation1.ods", na = c("", " ", "NA")) |>
   clean_names() |>
   mutate(across(where(is.character), as.factor)) |>
   mutate(id = paste0(nom, "_", coupe))
```

```{r}
#| label: macro-moy

# Macro calcul des moyennes

expt <- function(df = tt1, coupe) {
  zz <- df |>
    dplyr::select(nom, ends_with(coupe)) |>
    rowwise() |>
    mutate(mes_exp = mean(c_across(3:5), na.rm = T)) |>
    ungroup() |>
    dplyr::select(-starts_with("expert"))
  names(zz) <- c("nom", "form", "expert")
  return(zz)
}
```


```{r}
#| label: moyennes

# Calcul des moyennes des mesures des experts

coupes <- c("nerf_dt", "gaine_dt", "nerf_gch", "gaine_gch")
tbdiff <- NULL
for (i in coupes) {
  zz <- expt(tt1, i)
  tbdiff <- rbind(tbdiff, zz)
}
tbdiff <- tbdiff |>
  rowwise() |>
  mutate(valmes = if_else(abs(form - expert) > 1, 0, 1)) |>
  ungroup()
```



```{r}
#| label: validation

# Résultats par lecteur
zz <- tbdiff |>
  group_by(nom) |>
  summarise(test = sum(valmes), n = n()) |>
  mutate("Bonnes réponses n/N (%)" = paste0(test, "/", n, " (",round(100*test/n,1)," %)")) |> 
  mutate(Centre = str_sub(nom, -2)) |>
  mutate(Nom = str_sub(nom, 0, -4)) |>
  dplyr::select(Nom, Centre, "Bonnes réponses n/N (%)")
#
zz |>   
  kbl() |>
  kable_material(
    full_width = FALSE,
    bootstrap_options = c("striped", "hover")
  ) 
# Export 
if(expx){
  zz |> 
  as_tibble() |>
        write_ods(path = classeur, 
                  sheet = "Validation", 
                  append = TRUE)
  }
```



